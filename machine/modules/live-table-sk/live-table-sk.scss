@import '~elements-sk/icon/icon-sk';
@import '~elements-sk/toast-sk/toast-sk';
@import '~elements-sk/styles/buttons/buttons';
@import '~elements-sk/themes/themes';
@import '../theme/theme';

// .defaultLiveTableSkStyling is applied by default to any element that is a
// subclass of live-table-sk. LiveTableSk's constructor arranges this.
.defaultLiveTableSkStyling {
  table {
    border-collapse: collapse;
    width: 100%;
  }

  thead {
    background: var(--surface-1dp);

    // If we just put a bottom border on the thead, it scrolls away when you
    // scroll the table.
    &:after {
      bottom: 0;
      border-bottom: solid 1px var(--on-surface);
      content: '';
      position: absolute;
      width: 100%;
    }
  }

  tr {
    border-bottom: 1px solid var(--on-background);
  }

  // In both the thead (so it doesn't pile up with the :after border at some
  // zoom levels) and the tbody:
  tr:last-child {
    border-bottom: none;
  }

  th {
    padding: 4px 8px 4px 0;
    text-align: left;
  }

  td {
    vertical-align: baseline;
    padding: 0;
  }

  td.outOfSpec {
    color: var(--error);
    font-weight: bold;
  }

  td.center {
    text-align: center;
  }

  a:visited,
  a {
    color: var(--primary);
  }

  // Override the <button> styles from elements-sk to produce more compact buttons.
  //
  // This is not necessary under Webpack because this component does not explicitly import the
  // button.scss stylesheet from elements-sk. The Bazel build, however, automatically imports the
  // styles of any elements-sk components referenced from TypeScript. Thus, we need to reset the
  // below styles.
  button {
    height: auto !important;
    margin: 0;
    padding: 4px;
    text-transform: capitalize;
  }

  &[waiting] * {
    cursor: wait;
  }
}
