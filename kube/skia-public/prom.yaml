apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: prometheus
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: "prometheus"
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.1.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.enable-lifecycle"
            - "--web.listen-address=:9090"
          securityContext:
            # TODO(jcgregorio) Figure out how to chmod volume claims.
            runAsUser: 0
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume-skia
              mountPath: /prometheus/
          resources:
            requests:
              memory: "300Mi"
              cpu: "200m"
        - name: configmap-reload
          args:
            - "--volume-dir=/etc/prometheus/"
            - "--webhook-method=POST"
            - "--webhook-url=http://localhost:9090/-/reload"
          image: gcr.io/skia-public/configmap-reload:2018-04-28T12_08_02Z-jcgregorio-98101a40e477a859ed2bf019c377a36fcb805831-dirty
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
          resources:
            requests:
              memory: "30Mi"
              cpu: "10m"
        - name: iap-proxy
          args:
            - "--logtostderr"
            - "--aud=/projects/145247227042/global/backendServices/977992939173693172"
            - "--port=:8080"
            - "--target_port=:9090"
            - "--prom_port=:10000"
          image: gcr.io/skia-public/iap_proxy:2018-04-28T12_10_31Z-jcgregorio-5c1a004783716177b6bc2126cd375919b33fcef8-dirty
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: skia-public-auth
              mountPath: /var/secrets/skia-public-auth
          resources:
            requests:
              memory: "30Mi"
              cpu: "200m"
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: skia-public-auth
          secret:
            secretName: skia-public-auth
  volumeClaimTemplates:
  - metadata:
      name: prometheus-storage-volume-skia
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1000Gi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
