apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - port: 8000
      name: http
    - port: 3000
      name: internal-http
    - port: 10000
      name: iap-proxy-metrics
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: grafana
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: "grafana"
  template:
    metadata:
      labels:
        app: grafana
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 2000 # aka skia
        fsGroup: 2000   # aka skia
      containers:
        - name: grafana
          image: grafana/grafana:5.1.2
          env:
            # Grafana lets environment variables overwrite some values in the
            # .ini files. But then they go and set those environment variables
            # in their Dockerfile, so we have to set them here because env
            # variables are applied after the .ini config files.
            - name: GF_PATHS_CONFIG
              value: /etc/grafana/grafana.ini
            - name: GF_PATHS_DATA
              value: /mnt/grafana
            - name: GF_PATHS_HOME
              value: /usr/share/grafana
            - name: GF_PATHS_LOGS
              value: /mnt/grafana
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-conf
              mountPath: /etc/grafana/
            - name: grafana-storage-volume-claim
              mountPath: /mnt/grafana/
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
        - name: iap-proxy
          args:
            - "--logtostderr"
            - "--aud=/projects/145247227042/global/backendServices/5414126803647739030"
            - "--auth_group=google/skia-staff@google.com"
            - "--port=:8000"
            - "--target_port=:3000"
            - "--prom_port=:10000"
          image: gcr.io/skia-public/iap-proxy:2018-05-16T14_13_55Z-jcgregorio-80445ff-clean
          ports:
            - containerPort: 8000
            - containerPort: 10000
          volumeMounts:
            - name: skia-public-auth
              mountPath: /var/secrets/skia-public-auth
          resources:
            requests:
              memory: "30Mi"
              cpu: "200m"
      volumes:
        - name: grafana-conf
          configMap:
            defaultMode: 420
            name: grafana-conf
        - name: skia-public-auth
          secret:
            secretName: skia-public-auth
  volumeClaimTemplates:
    - metadata:
       name: grafana-storage-volume-claim
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 20Gi
