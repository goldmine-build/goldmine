load("//bazel/go:go_test.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "child",
    srcs = [
        "child.go",
        "cipd.go",
        "fuchsia_sdk.go",
        "gcs.go",
        "git_checkout.go",
        "git_checkout_github.go",
        "gitiles.go",
        "semver_gcs.go",
    ],
    importpath = "go.skia.org/infra/autoroll/go/repo_manager/child",
    visibility = ["//visibility:public"],
    deps = [
        "//autoroll/go/codereview",
        "//autoroll/go/config",
        "//autoroll/go/config_vars",
        "//autoroll/go/repo_manager/common/git_common",
        "//autoroll/go/repo_manager/common/gitiles_common",
        "//autoroll/go/revision",
        "//go/cipd",
        "//go/gcs",
        "//go/gcs/gcsclient",
        "//go/git",
        "//go/gitiles",
        "//go/skerr",
        "//go/sklog",
        "//go/util",
        "//go/vcsinfo",
        "//go/vfs",
        "@com_google_cloud_go_storage//:storage",
        "@org_chromium_go_luci//cipd/client/cipd",
        "@org_chromium_go_luci//cipd/common",
        "@org_golang_google_api//option",
    ],
)

go_test(
    name = "child_test",
    srcs = [
        "cipd_manual_test.go",
        "gitiles_test.go",
        "semver_gcs_test.go",
    ],
    embed = [":child"],
    # cipd_test.go requires the "gcloud" binary.
    tags = ["no-sandbox"],
    deps = [
        "//autoroll/go/config",
        "//autoroll/go/config_vars",
        "//autoroll/go/revision",
        "//go/auth",
        "//go/chrome_branch/mocks",
        "//go/git",
        "//go/git/testutils",
        "//go/gitiles",
        "//go/gitiles/testutils",
        "//go/httputils",
        "//go/mockhttpclient",
        "//go/testutils",
        "//go/testutils/unittest",
        "//go/vfs",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
    ],
)
