// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import types "go.skia.org/infra/golden/go/types"

// TestExpBuilder is an autogenerated mock type for the TestExpBuilder type
type TestExpBuilder struct {
	mock.Mock
}

// AddTestExp provides a mock function with given fields: testExp
func (_m *TestExpBuilder) AddTestExp(testExp types.TestExp) {
	_m.Called(testExp)
}

// Classification provides a mock function with given fields: test, digest
func (_m *TestExpBuilder) Classification(test string, digest string) types.Label {
	ret := _m.Called(test, digest)

	var r0 types.Label
	if rf, ok := ret.Get(0).(func(string, string) types.Label); ok {
		r0 = rf(test, digest)
	} else {
		r0 = ret.Get(0).(types.Label)
	}

	return r0
}

// SetExpectation provides a mock function with given fields: test, digest, label
func (_m *TestExpBuilder) SetExpectation(test string, digest string, label types.Label) {
	_m.Called(test, digest, label)
}

// TestExp provides a mock function with given fields:
func (_m *TestExpBuilder) TestExp() types.TestExp {
	ret := _m.Called()

	var r0 types.TestExp
	if rf, ok := ret.Get(0).(func() types.TestExp); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.TestExp)
		}
	}

	return r0
}
